## This file (thesis.sage) was *autogenerated* from thesis.tex with sagetex.sty version 2010/03/25 v2.2.5.
import sagetex
_st_ = sagetex.SageTeXProcessor('thesis')
_do_ver_check_ = True
if _do_ver_check_ and sagetex.__version__.find('2010/03/25 v2.2.5') == -1:
 import sys
 print '{0}.sage was generated with sagetex.sty version 2010/03/25 v2.2.5,'.format( sys.argv[0].split('.')[0])
 print 'but is being processed by sagetex.py version {0}.'.format( ' '.join(sagetex.__version__.strip().strip('[').split()[0:2]))
 print 'SageTeX version mismatch! Exiting.'
 sys.exit(int(1))
_st_.blockbegin()
try:
 def parity_circuit(enum, init_vert, init_enum):
 
     inv_enum = dict([[v, inverse_dict(d)] for v,d in enum.iteritems()])
 
 
     circ = [init_vert]
     cur_vert = init_vert
     out_enum = init_enum
 
     next_vert = enum[cur_vert][out_enum]
     circ.append(next_vert)
     in_enum = inv_enum[next_vert][cur_vert]
     out_enum = (in_enum + 2)%4
     cur_vert = next_vert
 
 
     while ( (cur_vert, out_enum) != (init_vert, init_enum) ):
         next_vert = enum[cur_vert][out_enum]
         circ.append(next_vert)
         in_enum = inv_enum[next_vert][cur_vert]
         out_enum = (in_enum + 2)%4
         cur_vert = next_vert
 
     return circ
except:
 _st_.goboom(443)
_st_.blockend()
_st_.endofdoc()
